{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satin\\\\Downloads\\\\fnt\\\\frontend\\\\src\\\\components\\\\PostCard\\\\CommentsUI.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction doComment(id) {\n  var comment = document.getElementById('noter-text-area').value;\n  axios({\n    method: 'POST',\n    url: 'http://3.129.45.198/api/auth/posts/comment',\n    data: {\n      post_id: id,\n      comment: comment\n    },\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    Swal.fire({\n      title: 'successful',\n      text: response.data.message,\n      icon: 'success'\n    });\n    window.location.reload();\n  }).catch(error => {\n    console.log(error);\n  });\n}\n\nfunction stringToDate(date) {\n  return moment(date).fromNow() + ' ' + moment(date).format('h:m');\n}\n\nfunction CommentsUI() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  localStorage.setItem('post_id', id);\n  let [responseData, setResponseData] = React.useState('');\n  let fetchData = React.useCallback(() => {\n    axios({\n      method: 'POST',\n      url: 'http://3.129.45.198/api/auth/posts/getComment',\n      data: {\n        post_id: localStorage.getItem('post_id')\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setResponseData(response.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui comments\",\n      style: {\n        margin: 'auto',\n        paddingTop: '40px',\n        paddingBottom: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"ui dividing header\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), responseData && responseData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"author\",\n            children: item.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"metadata\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"date\",\n              children: stringToDate(item.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text\",\n            children: item.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"actions\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"reply\",\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"ui reply form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"noter-text-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => doComment(id),\n          class: \"ui blue labeled submit icon button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"icon edit\",\n            style: {\n              width: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \" Add Reply\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CommentsUI, \"q+uuhwu1COmxOpm5HpgaDQQtGfA=\", false, function () {\n  return [useParams];\n});\n\n_c = CommentsUI;\nexport default CommentsUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsUI\");","map":{"version":3,"sources":["C:/Users/satin/Downloads/fnt/frontend/src/components/PostCard/CommentsUI.js"],"names":["useParams","moment","React","useState","axios","Swal","doComment","id","comment","document","getElementById","value","method","url","data","post_id","headers","Authorization","localStorage","getItem","Accept","then","response","fire","title","text","message","icon","window","location","reload","catch","error","console","log","stringToDate","date","fromNow","format","CommentsUI","setItem","responseData","setResponseData","fetchData","useCallback","useEffect","margin","paddingTop","paddingBottom","map","item","user","name","created_at","width"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport React, {useState }from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nfunction doComment(id) {\n  var comment = document.getElementById('noter-text-area').value;\n\n  axios({\n    method: 'POST',\n    url: 'http://3.129.45.198/api/auth/posts/comment',\n    data: {\n      post_id: id,\n      comment: comment\n    },\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then((response) => {\n    Swal.fire({\n      title: 'successful',\n      text: response.data.message,\n      icon: 'success'\n    });\n    window.location.reload();\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n}\n\nfunction stringToDate(date) {\n  return moment(date).fromNow() + ' ' + moment(date).format('h:m');\n}\n\nfunction CommentsUI() {\n  const { id } = useParams();\n  localStorage.setItem('post_id', id);\n  let [responseData, setResponseData] = React.useState('');\n  let fetchData = React.useCallback(() => {\n    axios({\n      method: 'POST',\n      url: 'http://3.129.45.198/api/auth/posts/getComment',\n      data: {\n        post_id: localStorage.getItem('post_id')\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => {\n      setResponseData(response.data.data);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }, [])\n  React.useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <>\n      <div class=\"ui comments\" style={{ margin: 'auto', paddingTop: '40px', paddingBottom: '50px' }}>\n        <h3 class=\"ui dividing header\">Comments</h3>\n        {\n          responseData && responseData.map((item) => (\n            <div class=\"comment\">\n              <div class=\"content\">\n                <a class=\"author\">{item.user.name}</a>\n                <div class=\"metadata\">\n                  <span class=\"date\">{stringToDate(item.created_at)}</span>\n                </div>\n                <div class=\"text\">{item.comment}</div>\n                <div class=\"actions\">\n                  <a class=\"reply\">Reply</a>\n                </div>\n              </div>\n            </div>\n          ))\n        }\n        {/* <div class=\"comment\">\n          <div class=\"content\">\n            <a class=\"author\">Elliot Fu</a>\n            <div class=\"metadata\">\n              <span class=\"date\">Yesterday at 12:30AM</span>\n            </div>\n            <div class=\"text\">\n              <p>This has been very useful for my research. Thanks as well!</p>\n            </div>\n            <div class=\"actions\">\n              <a class=\"reply\">Reply</a>\n            </div>\n          </div>\n          <div class=\"comments\">\n            <div class=\"comment\">\n              <div class=\"content\">\n                <a class=\"author\">Jenny Hess</a>\n                <div class=\"metadata\">\n                  <span class=\"date\">Just now</span>\n                </div>\n                <div class=\"text\">Elliot you are always so right :)</div>\n                <div class=\"actions\">\n                  <a class=\"reply\">Reply</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"comment\">\n          <div class=\"content\">\n            <a class=\"author\">Joe Henderson</a>\n            <div class=\"metadata\">\n              <span class=\"date\">5 days ago</span>\n            </div>\n            <div class=\"text\">Dude, this is awesome. Thanks so much</div>\n            <div class=\"actions\">\n              <a class=\"reply\">Reply</a>\n            </div>\n          </div>\n        </div>\n         */}\n        <form class=\"ui reply form\">\n          <div class=\"field\">\n            <textarea id=\"noter-text-area\"></textarea>\n          </div>\n          <div onClick={() => doComment(id)} class=\"ui blue labeled submit icon button\">\n            <i class=\"icon edit\" style={{ width: '30px' }}></i> Add Reply\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\nexport default CommentsUI;\n"]},"metadata":{},"sourceType":"module"}