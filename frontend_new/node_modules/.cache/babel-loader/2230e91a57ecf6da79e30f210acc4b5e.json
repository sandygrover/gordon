{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // Slice\n\nconst slice = createSlice({\n  name: 'user',\n  initialState: {\n    token: 'testtoken',\n    expire_in: 231233,\n    role: 'User',\n    name: 'Alex'\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n    }\n  }\n});\nexport default slice.reducer; // Actions\n\nconst {\n  loginSuccess,\n  logoutSuccess\n} = slice.actions;\nexport const login = ({\n  username,\n  password\n}) => async dispatch => {\n  try {\n    // const res = await api.post('/api/auth/login/', { username, password })\n    dispatch(loginSuccess({\n      username\n    }));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    // const res = await api.post('/api/auth/logout/')\n    return dispatch(logoutSuccess());\n  } catch (e) {\n    return console.error(e.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/satin/Downloads/fnt/frontend/src/redux/actions/user.js"],"names":["createSlice","slice","name","initialState","token","expire_in","role","reducers","loginSuccess","state","action","user","payload","logoutSuccess","reducer","actions","login","username","password","dispatch","e","console","error","message","logout"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,WADK;AAEZC,IAAAA,SAAS,EAAE,MAFC;AAGZC,IAAAA,IAAI,EAAE,MAHM;AAIZJ,IAAAA,IAAI,EAAE;AAJM,GAFU;AAQxBK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACE,IAAN,GAAaD,MAAM,CAACE,OAApB;AACD,KAHO;AAIRC,IAAAA,aAAa,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACD;AANO;AARc,CAAD,CAAzB;AAiBA,eAAeV,KAAK,CAACa,OAArB,C,CACA;;AACA,MAAM;AAAEN,EAAAA,YAAF;AAAgBK,EAAAA;AAAhB,IAAkCZ,KAAK,CAACc,OAA9C;AACA,OAAO,MAAMC,KAAK,GAChB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACA,MAAOC,QAAP,IAAoB;AAClB,MAAI;AACF;AACAA,IAAAA,QAAQ,CAACX,YAAY,CAAC;AAAES,MAAAA;AAAF,KAAD,CAAb,CAAR;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,WAAOC,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB,CAAP;AACD;AACF,CATI;AAUP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOL,QAAP,IAAoB;AAC9C,MAAI;AACF;AACA,WAAOA,QAAQ,CAACN,aAAa,EAAd,CAAf;AACD,GAHD,CAGE,OAAOO,CAAP,EAAU;AACV,WAAOC,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB,CAAP;AACD;AACF,CAPM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n// Slice\nconst slice = createSlice({\n  name: 'user',\n  initialState: {\n    token: 'testtoken',\n    expire_in: 231233,\n    role: 'User',\n    name: 'Alex'\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n    }\n  }\n});\nexport default slice.reducer;\n// Actions\nconst { loginSuccess, logoutSuccess } = slice.actions;\nexport const login =\n  ({ username, password }) =>\n  async (dispatch) => {\n    try {\n      // const res = await api.post('/api/auth/login/', { username, password })\n      dispatch(loginSuccess({ username }));\n    } catch (e) {\n      return console.error(e.message);\n    }\n  };\nexport const logout = () => async (dispatch) => {\n  try {\n    // const res = await api.post('/api/auth/logout/')\n    return dispatch(logoutSuccess());\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}