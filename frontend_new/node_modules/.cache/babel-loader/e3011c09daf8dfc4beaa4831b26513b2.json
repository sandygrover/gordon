{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satin\\\\Downloads\\\\fnt\\\\frontend\\\\src\\\\components\\\\forms\\\\Auth\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from 'react';\n// import { Button, Input, Icon, Form, Divider, Image } from 'semantic-ui-react';\n// import { Formik } from 'formik';\n// import * as yup from 'yup';\n// import {GoogleLogin} from 'react-google-login'\n// import FacebookLogin from 'react-facebook-login';\n// import { Link, useHistory } from 'react-router-dom';\n// import styles from './LoginForm.module.scss';\n// const validationSchema = yup.object({\n//   // email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n//   // password: yup\n//   //   .string('Enter your password')\n//   //   .min(8, 'Password should be of minimum 6 characters length')\n//   //   .required('Password is required')\n// });\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState();\n//   const PostData = async (e) => {\n//     e.preventDefault();\n//     console.log(email)\n//     console.log(password)\n//     history.push('/home')\n//   }\n//   const [showPassword, setShowPassword] = useState(false);\n//   let history = useHistory();\n//   const handleTogglePassword = () => {\n//     setShowPassword(!showPassword);\n//   };\n//   const responseGoogle=(response) => {\n//     console.log(response);\n//     history.push('/home');\n//   }\n//   const handleLogin =(response) => {\n//     console.log(response);\n//     history.push('/');\n//   }\n//   const responseFacebook=(response) => {\n//     console.log(\"login result\" , response);\n//   }\n//   const componentClicked =(data) => {\n//     console.log(data);\n//   }\n//   return (\n//     <div>\n//       <div className=\"logo-text\"><Image src={process.env.PUBLIC_URL + '/images/Friday.png'} style={{width:'50%  '}} /></div>\n//       <div className=\"logo_tag\">Create Amazing Content</div>\n//       <p>Dive into the ABC with your free account and start earning between $1,499 to $7,495 per month.</p>\n//       <Formik\n//         initialValues={{\n//           email: '',\n//           password: ''\n//         }}\n//         validationSchema={validationSchema}\n//         // validateOnChange={false}\n//         validateOnBlur={true}\n//         onSubmit={(values, actions) => {\n//           setTimeout(() => {\n//             console.log(values);\n//             // just a place holder for axios request\n//             history.push('/home');\n//           }, 1500);\n//         }}\n//       >\n//         {({ touched, errors, onChange,values, handleBlur,  handleSubmit, isSubmitting }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Field>\n//               <Input\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 className={styles.borderBottom}\n//                 onBlur={handleBlur}\n//                 // validateOnChange={handleChange}\n//                 // onChange={handleChange}\n//                 error={!!touched.email && !!errors.email}\n//                 placeholder=\"Email\"\n//               />\n//               {errors.email && touched.email && <span className={'error-text'}>{errors.email}</span>}\n//             </Form.Field>\n//             <Form.Field>\n//               <Input\n//                 icon={<Icon name={showPassword ? 'eye slash outline' : 'eye'} link onClick={handleTogglePassword} />}\n//                 type={showPassword ? 'text' : 'password'}\n//                 name=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 // onChange={handleChange}\n//                 // validateOnChange={handleChange}\n//                 onBlur={handleBlur}\n//                 error={!!touched.password && !!errors.password}\n//                 className={styles.borderBottom}\n//                 placeholder=\"Password\"\n//               />\n//               {errors.password && touched.password && <span className={'error-text'}>{errors.password}</span>}\n//             </Form.Field>\n//             <p className={styles.forgotLink}>\n//               {/* <a>Fogot Password?</a> */}\n//               <Link to=\"/forgot-password\">Fogot Password?</Link>\n//             </p>\n//             <Button\n//               disabled={isSubmitting}\n//               loading={isSubmitting}\n//               onClick={PostData}\n//               className={styles.button_fluid}\n//               primary\n//               type=\"submit\"\n//             >\n//               Login\n//             </Button>\n//           </Form>\n//         )}\n//       </Formik>\n//       <Divider horizontal>Or</Divider>\n//       <GoogleLogin  type=\"submit\"\n//         className={styles.button_social}\n//         clientId=\"920869882108-cf236hmg7903ol77gp3gj9vjnus5a787.apps.googleusercontent.com\"\n//         onSuccess={responseGoogle}\n//         onFailure={handleLogin}\n//         cookiePolicy={'single_host_origin'}\n//         buttonText={<h4>Login with Google</h4>}\n//         />\n//         {/* <Image src={process.env.PUBLIC_URL + '/images/google-icon.png'} avatar /> Login with Google */}\n//       {/* </Button> */}\n//       {/* <Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} avatar />\n//         Login with Facebook */}\n//       <FacebookLogin\n//       cssClass={styles.myfacebookbuttonclass}\n//        type=\"submit\"\n//         appId=\"185749406856002\"\n//         fields=\"name, email, picture\" onClick={componentClicked} callback={responseFacebook} autLoad={true}\n//        icon={<Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} style={{innerWidth: '100%'}}/>}\n//        textButton = {<h4>Login with Facebook</h4>}\n//        />\n//       {/* </Button> */}\n//       <p className={styles.textLink}>\n//         New to ABC? <Link to=\"/sign-up\">Sign Up</Link>\n//       </p>\n//     </div>\n//   );\n// }\n// export default LoginForm;\nimport { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { Button, Input, Icon, Form, Divider, Image } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { osName, browserName } from 'react-device-detect';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from './LoginForm.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  password: yup.string('Enter your password').min(8, 'Password should be of minimum 6 characters length').required('Password is required')\n});\n\nfunction LoginForm() {\n  _s();\n\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState();\n  // const PostData = async (e) => {\n  //   e.preventDefault();\n  //   console.log(email)\n  //   console.log(password)\n  //   history.push('/home')\n  // }\n  const [showPassword, setShowPassword] = useState(false);\n  let history = useHistory();\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const responseGoogle = response => {\n    console.log(response);\n    history.push('/home');\n  };\n\n  const handleLogin = response => {\n    console.log(response);\n    history.push('/');\n  };\n\n  const responseFacebook = response => {\n    console.log('login result', response);\n  };\n\n  const componentClicked = data => {\n    console.log(data);\n  };\n\n  const loginSession = () => {\n    axios({\n      method: 'post',\n      url: 'http://3.129.45.198/api/auth/add-session',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      data: {\n        device: osName + ' ' + browserName\n      }\n    }).then(function (response) {}).catch(res => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-text\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: process.env.PUBLIC_URL + '/images/Friday.png',\n        style: {\n          width: '50%  '\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo_tag\",\n      children: \"Create Amazing Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dive into the FNT with your free account and start earning between \\u20AC1,499 to \\u20AC7,495 per month.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: validationSchema // validateOnChange={false}\n      ,\n      validateOnBlur: true,\n      onSubmit: (values, actions) => {\n        axios({\n          method: 'post',\n          url: 'http://3.129.45.198/api/auth/login',\n          data: {\n            email: values.email,\n            password: values.password\n          }\n        }).then(function (response) {\n          if (response.data.status) {\n            localStorage.setItem('is_login', true);\n            localStorage.setItem('token', response.data.data[0].token);\n            localStorage.setItem('userId', response.data.data[0].id);\n            localStorage.setItem('name', response.data.data[0].name);\n            localStorage.setItem('username', response.data.data[0].username);\n            localStorage.setItem('email', response.data.data[0].email);\n            localStorage.setItem('phone_number', response.data.data[0].phone_number);\n            localStorage.setItem('website', response.data.data[0].website);\n            localStorage.setItem('subscription_fee', response.data.data[0].subscription_fee);\n            localStorage.setItem('location', response.data.data[0].location);\n            localStorage.setItem('profile', response.data.data[0].profile);\n            localStorage.setItem('role', response.data.data[0].role);\n            loginSession();\n            Swal.fire({\n              title: 'Success',\n              text: response.data.message,\n              icon: 'success'\n            }).then(() => {\n              setTimeout(() => {\n                history.push('/home');\n              }, 1500);\n            });\n          } else {\n            Swal.fire({\n              title: 'Error',\n              text: response.data.message,\n              icon: 'warning'\n            }).then(() => {\n              actions.setSubmitting(false);\n            });\n          }\n        }).catch(res => {\n          window.location.reload(false);\n        });\n      },\n      children: ({\n        touched,\n        errors,\n        onChange,\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"email\",\n            value: values.email // onChange={(e) => setEmail(e.target.value)}\n            ,\n            className: styles.borderBottom,\n            onBlur: handleBlur // validateOnChange={handleChange}\n            ,\n            onChange: handleChange,\n            error: !!touched.email && !!errors.email,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'error-text',\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              name: showPassword ? 'eye slash outline' : 'eye',\n              link: true,\n              onClick: handleTogglePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 23\n            }, this),\n            type: showPassword ? 'text' : 'password',\n            name: \"password\",\n            value: values.password // onChange={(e) => setPassword(e.target.value)}\n            ,\n            onChange: handleChange // validateOnChange={handleChange}\n            ,\n            onBlur: handleBlur,\n            error: !!touched.password && !!errors.password,\n            className: styles.borderBottom,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'error-text',\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.forgotLink,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Fogot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isSubmitting,\n          loading: isSubmitting // onClick={PostData}\n          ,\n          className: styles.button_fluid,\n          primary: true,\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: \"Or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      type: \"submit\",\n      className: styles.button_social,\n      clientId: \"920869882108-cf236hmg7903ol77gp3gj9vjnus5a787.apps.googleusercontent.com\",\n      onSuccess: responseGoogle,\n      onFailure: handleLogin,\n      cookiePolicy: 'single_host_origin',\n      buttonText: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n      cssClass: styles.myfacebookbuttonclass,\n      type: \"submit\",\n      appId: \"185749406856002\",\n      fields: \"name, email, picture\",\n      onClick: componentClicked,\n      callback: responseFacebook,\n      autLoad: true,\n      icon: /*#__PURE__*/_jsxDEV(Image, {\n        src: process.env.PUBLIC_URL + '/images/facebook-icon.png',\n        style: {\n          innerWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }, this),\n      textButton: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Login with Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.textLink,\n      children: [\"New to FNT ? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-up\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"mqlh39YXGfFnD/VSTuT5fpXXaS0=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/satin/Downloads/fnt/frontend/src/components/forms/Auth/LoginForm.js"],"names":["useState","Swal","axios","Button","Input","Icon","Form","Divider","Image","Formik","yup","osName","browserName","GoogleLogin","FacebookLogin","Link","useHistory","styles","validationSchema","object","email","string","required","password","min","LoginForm","showPassword","setShowPassword","history","handleTogglePassword","responseGoogle","response","console","log","push","handleLogin","responseFacebook","componentClicked","data","loginSession","method","url","headers","Authorization","localStorage","getItem","Accept","device","then","catch","res","process","env","PUBLIC_URL","width","values","actions","status","setItem","token","id","name","username","phone_number","website","subscription_fee","location","profile","role","fire","title","text","message","icon","setTimeout","setSubmitting","window","reload","touched","errors","onChange","handleChange","handleBlur","handleSubmit","isSubmitting","borderBottom","forgotLink","button_fluid","button_social","myfacebookbuttonclass","innerWidth","textLink"],"mappingsyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,OAApC,EAA6CC,KAA7C,QAA0D,mBAA1D;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,qBAApC;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,CAAW;AAClCC,EAAAA,KAAK,EAAEV,GAAG,CAACW,MAAJ,CAAW,kBAAX,EAA+BD,KAA/B,CAAqC,qBAArC,EAA4DE,QAA5D,CAAqE,mBAArE,CAD2B;AAElCC,EAAAA,QAAQ,EAAEb,GAAG,CACVW,MADO,CACA,qBADA,EAEPG,GAFO,CAEH,CAFG,EAEA,mDAFA,EAGPF,QAHO,CAGE,sBAHF;AAFwB,CAAX,CAAzB;;AAQA,SAASG,SAAT,GAAqB;AAAA;;AACnB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,KAAD,CAAhD;AACA,MAAI4B,OAAO,GAAGZ,UAAU,EAAxB;;AAEA,QAAMa,oBAAoB,GAAG,MAAM;AACjCF,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,QAAMI,cAAc,GAAIC,QAAD,IAAc;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,IAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAIJ,QAAD,IAAc;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAIL,QAAD,IAAc;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACD,GAFD;;AAIA,QAAMM,gBAAgB,GAAIC,IAAD,IAAU;AACjCN,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBrC,IAAAA,KAAK,CAAC;AACJsC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,0CAFD;AAGJC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGP,wBAAgB;AAHT,OAHL;AAQJR,MAAAA,IAAI,EAAE;AACJS,QAAAA,MAAM,EAAEpC,MAAM,GAAG,GAAT,GAAeC;AADnB;AARF,KAAD,CAAL,CAYGoC,IAZH,CAYQ,UAAUjB,QAAV,EAAoB,CAAE,CAZ9B,EAaGkB,KAbH,CAaUC,GAAD,IAAS,CAAE,CAbpB;AAcD,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,oBAArC;AAA2D,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAlE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACblC,QAAAA,KAAK,EAAE,EADM;AAEbG,QAAAA,QAAQ,EAAE;AAFG,OADjB;AAKE,MAAA,gBAAgB,EAAEL,gBALpB,CAME;AANF;AAOE,MAAA,cAAc,EAAE,IAPlB;AAQE,MAAA,QAAQ,EAAE,CAACqC,MAAD,EAASC,OAAT,KAAqB;AAC7BtD,QAAAA,KAAK,CAAC;AACJsC,UAAAA,MAAM,EAAE,MADJ;AAEJC,UAAAA,GAAG,EAAE,oCAFD;AAGJH,UAAAA,IAAI,EAAE;AACJlB,YAAAA,KAAK,EAAEmC,MAAM,CAACnC,KADV;AAEJG,YAAAA,QAAQ,EAAEgC,MAAM,CAAChC;AAFb;AAHF,SAAD,CAAL,CAOGyB,IAPH,CAOQ,UAASjB,QAAT,EAAmB;AACvB,cAAGA,QAAQ,CAACO,IAAT,CAAcmB,MAAjB,EAAyB;AACnBb,YAAAA,YAAY,CAACc,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACAd,YAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8B3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBqB,KAApD;AACAf,YAAAA,YAAY,CAACc,OAAb,CAAqB,QAArB,EAA+B3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBsB,EAArD;AACAhB,YAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6B3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBuB,IAAnD;AACAjB,YAAAA,YAAY,CAACc,OAAb,CAAqB,UAArB,EAAiC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBwB,QAAvD;AACAlB,YAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8B3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBlB,KAApD;AACAwB,YAAAA,YAAY,CAACc,OAAb,CAAqB,cAArB,EAAqC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsByB,YAA3D;AACAnB,YAAAA,YAAY,CAACc,OAAb,CAAqB,SAArB,EAAgC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsB0B,OAAtD;AACApB,YAAAA,YAAY,CAACc,OAAb,CAAqB,kBAArB,EAAyC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsB2B,gBAA/D;AACArB,YAAAA,YAAY,CAACc,OAAb,CAAqB,UAArB,EAAiC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsB4B,QAAvD;AACAtB,YAAAA,YAAY,CAACc,OAAb,CAAqB,SAArB,EAAgC3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsB6B,OAAtD;AACAvB,YAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6B3B,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsB8B,IAAnD;AACA7B,YAAAA,YAAY;AACZtC,YAAAA,IAAI,CAACoE,IAAL,CAAU;AACRC,cAAAA,KAAK,EAAE,SADC;AAERC,cAAAA,IAAI,EAAExC,QAAQ,CAACO,IAAT,CAAckC,OAFZ;AAGRC,cAAAA,IAAI,EAAE;AAHE,aAAV,EAIGzB,IAJH,CAIQ,MAAM;AACZ0B,cAAAA,UAAU,CAAC,MAAM;AACf9C,gBAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACD,eAFS,EAEP,IAFO,CAAV;AAGD,aARD;AASL,WAvBD,MAuBO;AACLjC,YAAAA,IAAI,CAACoE,IAAL,CAAU;AACRC,cAAAA,KAAK,EAAE,OADC;AAERC,cAAAA,IAAI,EAAExC,QAAQ,CAACO,IAAT,CAAckC,OAFZ;AAGRC,cAAAA,IAAI,EAAE;AAHE,aAAV,EAIGzB,IAJH,CAIQ,MAAM;AACZQ,cAAAA,OAAO,CAACmB,aAAR,CAAsB,KAAtB;AACD,aAND;AAOD;AACF,SAxCH,EAyCG1B,KAzCH,CAyCUC,GAAD,IAAS;AACd0B,UAAAA,MAAM,CAACV,QAAP,CAAgBW,MAAhB,CAAuB,KAAvB;AACD,SA3CH;AA4CD,OArDH;AAAA,gBAuDG,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,MAAX;AAAmBC,QAAAA,QAAnB;AAA6BzB,QAAAA,MAA7B;AAAqC0B,QAAAA,YAArC;AAAmDC,QAAAA,UAAnD;AAA+DC,QAAAA,YAA/D;AAA6EC,QAAAA;AAA7E,OAAD,kBACC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAE5B,MAAM,CAACnC,KAHhB,CAIE;AAJF;AAKE,YAAA,SAAS,EAAEH,MAAM,CAACoE,YALpB;AAME,YAAA,MAAM,EAAEH,UANV,CAOE;AAPF;AAQE,YAAA,QAAQ,EAAED,YARZ;AASE,YAAA,KAAK,EAAE,CAAC,CAACH,OAAO,CAAC1D,KAAV,IAAmB,CAAC,CAAC2D,MAAM,CAAC3D,KATrC;AAUE,YAAA,WAAW,EAAC;AAVd;AAAA;AAAA;AAAA;AAAA,kBADF,EAaG2D,MAAM,CAAC3D,KAAP,IAAgB0D,OAAO,CAAC1D,KAAxB,iBAAiC;AAAM,YAAA,SAAS,EAAE,YAAjB;AAAA,sBAAgC2D,MAAM,CAAC3D;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAbpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,eAAE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEM,YAAY,GAAG,mBAAH,GAAyB,KAAjD;AAAwD,cAAA,IAAI,MAA5D;AAA6D,cAAA,OAAO,EAAEG;AAAtE;AAAA;AAAA;AAAA;AAAA,oBADR;AAEE,YAAA,IAAI,EAAEH,YAAY,GAAG,MAAH,GAAY,UAFhC;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAE6B,MAAM,CAAChC,QAJhB,CAKE;AALF;AAME,YAAA,QAAQ,EAAE0D,YANZ,CAOE;AAPF;AAQE,YAAA,MAAM,EAAEC,UARV;AASE,YAAA,KAAK,EAAE,CAAC,CAACJ,OAAO,CAACvD,QAAV,IAAsB,CAAC,CAACwD,MAAM,CAACxD,QATxC;AAUE,YAAA,SAAS,EAAEN,MAAM,CAACoE,YAVpB;AAWE,YAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA,kBADF,EAcGN,MAAM,CAACxD,QAAP,IAAmBuD,OAAO,CAACvD,QAA3B,iBAAuC;AAAM,YAAA,SAAS,EAAE,YAAjB;AAAA,sBAAgCwD,MAAM,CAACxD;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAd1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAgCE;AAAG,UAAA,SAAS,EAAEN,MAAM,CAACqE,UAArB;AAAA,iCAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAhCF,eAoCE,QAAC,MAAD;AACE,UAAA,QAAQ,EAAEF,YADZ;AAEE,UAAA,OAAO,EAAEA,YAFX,CAGE;AAHF;AAIE,UAAA,SAAS,EAAEnE,MAAM,CAACsE,YAJpB;AAKE,UAAA,OAAO,MALT;AAME,UAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAxDJ;AAAA;AAAA;AAAA;AAAA,YANF,eA+GE,QAAC,OAAD;AAAS,MAAA,UAAU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/GF,eAgHE,QAAC,WAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEtE,MAAM,CAACuE,aAFpB;AAGE,MAAA,QAAQ,EAAC,0EAHX;AAIE,MAAA,SAAS,EAAE1D,cAJb;AAKE,MAAA,SAAS,EAAEK,WALb;AAME,MAAA,YAAY,EAAE,oBANhB;AAOE,MAAA,UAAU,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPd;AAAA;AAAA;AAAA;AAAA,YAhHF,eA6HE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAElB,MAAM,CAACwE,qBADnB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,iBAHR;AAIE,MAAA,MAAM,EAAC,sBAJT;AAKE,MAAA,OAAO,EAAEpD,gBALX;AAME,MAAA,QAAQ,EAAED,gBANZ;AAOE,MAAA,OAAO,EAAE,IAPX;AAQE,MAAA,IAAI,eAAE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEe,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,2BAArC;AAAkE,QAAA,KAAK,EAAE;AAAEqC,UAAAA,UAAU,EAAE;AAAd;AAAzE;AAAA;AAAA;AAAA;AAAA,cARR;AASE,MAAA,UAAU,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATd;AAAA;AAAA;AAAA;AAAA,YA7HF,eA2IE;AAAG,MAAA,SAAS,EAAEzE,MAAM,CAAC0E,QAArB;AAAA,+CACe,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADf;AAAA;AAAA;AAAA;AAAA;AAAA,YA3IF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiJD;;GAvMQlE,S;UAaOT,U;;;KAbPS,S;AAyMT,eAAeA,SAAf","sourcesContent":["// import { useState } from 'react';\n// import { Button, Input, Icon, Form, Divider, Image } from 'semantic-ui-react';\n// import { Formik } from 'formik';\n// import * as yup from 'yup';\n\n// import {GoogleLogin} from 'react-google-login'\n// import FacebookLogin from 'react-facebook-login';\n// import { Link, useHistory } from 'react-router-dom';\n// import styles from './LoginForm.module.scss';\n\n// const validationSchema = yup.object({\n//   // email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n//   // password: yup\n//   //   .string('Enter your password')\n//   //   .min(8, 'Password should be of minimum 6 characters length')\n//   //   .required('Password is required')\n// });\n\n// function LoginForm() {\n\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState();\n\n//   const PostData = async (e) => {\n//     e.preventDefault();\n\n//     console.log(email)\n//     console.log(password)\n//     history.push('/home')\n//   }\n\n//   const [showPassword, setShowPassword] = useState(false);\n//   let history = useHistory();\n\n//   const handleTogglePassword = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const responseGoogle=(response) => {\n//     console.log(response);\n//     history.push('/home');\n//   }\n\n//   const handleLogin =(response) => {\n//     console.log(response);\n//     history.push('/');\n//   }\n\n//   const responseFacebook=(response) => {\n//     console.log(\"login result\" , response);\n//   }\n\n//   const componentClicked =(data) => {\n//     console.log(data);\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"logo-text\"><Image src={process.env.PUBLIC_URL + '/images/Friday.png'} style={{width:'50%  '}} /></div>\n//       <div className=\"logo_tag\">Create Amazing Content</div>\n//       <p>Dive into the ABC with your free account and start earning between $1,499 to $7,495 per month.</p>\n//       <Formik\n//         initialValues={{\n//           email: '',\n//           password: ''\n//         }}\n//         validationSchema={validationSchema}\n//         // validateOnChange={false}\n//         validateOnBlur={true}\n//         onSubmit={(values, actions) => {\n//           setTimeout(() => {\n//             console.log(values);\n//             // just a place holder for axios request\n//             history.push('/home');\n//           }, 1500);\n//         }}\n//       >\n//         {({ touched, errors, onChange,values, handleBlur,  handleSubmit, isSubmitting }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Field>\n//               <Input\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 className={styles.borderBottom}\n//                 onBlur={handleBlur}\n//                 // validateOnChange={handleChange}\n//                 // onChange={handleChange}\n//                 error={!!touched.email && !!errors.email}\n//                 placeholder=\"Email\"\n//               />\n//               {errors.email && touched.email && <span className={'error-text'}>{errors.email}</span>}\n//             </Form.Field>\n//             <Form.Field>\n//               <Input\n//                 icon={<Icon name={showPassword ? 'eye slash outline' : 'eye'} link onClick={handleTogglePassword} />}\n//                 type={showPassword ? 'text' : 'password'}\n//                 name=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 // onChange={handleChange}\n//                 // validateOnChange={handleChange}\n//                 onBlur={handleBlur}\n//                 error={!!touched.password && !!errors.password}\n//                 className={styles.borderBottom}\n//                 placeholder=\"Password\"\n//               />\n//               {errors.password && touched.password && <span className={'error-text'}>{errors.password}</span>}\n//             </Form.Field>\n//             <p className={styles.forgotLink}>\n//               {/* <a>Fogot Password?</a> */}\n//               <Link to=\"/forgot-password\">Fogot Password?</Link>\n//             </p>\n//             <Button\n//               disabled={isSubmitting}\n//               loading={isSubmitting}\n//               onClick={PostData}\n//               className={styles.button_fluid}\n//               primary\n//               type=\"submit\"\n//             >\n//               Login\n//             </Button>\n//           </Form>\n//         )}\n//       </Formik>\n//       <Divider horizontal>Or</Divider>\n//       <GoogleLogin  type=\"submit\"\n//         className={styles.button_social}\n\n//         clientId=\"920869882108-cf236hmg7903ol77gp3gj9vjnus5a787.apps.googleusercontent.com\"\n//         onSuccess={responseGoogle}\n//         onFailure={handleLogin}\n\n//         cookiePolicy={'single_host_origin'}\n//         buttonText={<h4>Login with Google</h4>}\n//         />\n//         {/* <Image src={process.env.PUBLIC_URL + '/images/google-icon.png'} avatar /> Login with Google */}\n//       {/* </Button> */}\n//       {/* <Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} avatar />\n//         Login with Facebook */}\n//       <FacebookLogin\n//       cssClass={styles.myfacebookbuttonclass}\n//        type=\"submit\"\n\n//         appId=\"185749406856002\"\n//         fields=\"name, email, picture\" onClick={componentClicked} callback={responseFacebook} autLoad={true}\n//        icon={<Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} style={{innerWidth: '100%'}}/>}\n//        textButton = {<h4>Login with Facebook</h4>}\n//        />\n\n//       {/* </Button> */}\n\n//       <p className={styles.textLink}>\n//         New to ABC? <Link to=\"/sign-up\">Sign Up</Link>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default LoginForm;\n\nimport { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { Button, Input, Icon, Form, Divider, Image } from 'semantic-ui-react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { osName, browserName } from 'react-device-detect';\n\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from './LoginForm.module.scss';\n\nconst validationSchema = yup.object({\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 6 characters length')\n    .required('Password is required')\n});\n\nfunction LoginForm() {\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState();\n\n  // const PostData = async (e) => {\n  //   e.preventDefault();\n\n  //   console.log(email)\n  //   console.log(password)\n  //   history.push('/home')\n  // }\n\n  const [showPassword, setShowPassword] = useState(false);\n  let history = useHistory();\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const responseGoogle = (response) => {\n    console.log(response);\n    history.push('/home');\n  };\n\n  const handleLogin = (response) => {\n    console.log(response);\n    history.push('/');\n  };\n\n  const responseFacebook = (response) => {\n    console.log('login result', response);\n  };\n\n  const componentClicked = (data) => {\n    console.log(data);\n  };\n\n  const loginSession = () => {\n    axios({\n      method: 'post',\n      url: 'http://3.129.45.198/api/auth/add-session',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      data: {\n        device: osName + ' ' + browserName\n      }\n    })\n      .then(function (response) {})\n      .catch((res) => {});\n  };\n\n  return (\n    <div>\n      <div className=\"logo-text\">\n        <Image src={process.env.PUBLIC_URL + '/images/Friday.png'} style={{ width: '50%  ' }} />\n      </div>\n      <div className=\"logo_tag\">Create Amazing Content</div>\n      <p>Dive into the FNT with your free account and start earning between €1,499 to €7,495 per month.</p>\n      <Formik\n        initialValues={{\n          email: '',\n          password: ''\n        }}\n        validationSchema={validationSchema}\n        // validateOnChange={false}\n        validateOnBlur={true}\n        onSubmit={(values, actions) => {\n          axios({\n            method: 'post',\n            url: 'http://3.129.45.198/api/auth/login',\n            data: {\n              email: values.email,\n              password: values.password\n            },\n          }).then(function(response) {\n              if(response.data.status) {\n                    localStorage.setItem('is_login', true);\n                    localStorage.setItem('token', response.data.data[0].token);\n                    localStorage.setItem('userId', response.data.data[0].id);\n                    localStorage.setItem('name', response.data.data[0].name);\n                    localStorage.setItem('username', response.data.data[0].username);\n                    localStorage.setItem('email', response.data.data[0].email);\n                    localStorage.setItem('phone_number', response.data.data[0].phone_number);\n                    localStorage.setItem('website', response.data.data[0].website);\n                    localStorage.setItem('subscription_fee', response.data.data[0].subscription_fee);\n                    localStorage.setItem('location', response.data.data[0].location);\n                    localStorage.setItem('profile', response.data.data[0].profile);\n                    localStorage.setItem('role', response.data.data[0].role);\n                    loginSession();\n                    Swal.fire({\n                      title: 'Success',\n                      text: response.data.message,\n                      icon: 'success'\n                    }).then(() => {\n                      setTimeout(() => {\n                        history.push('/home');\n                      }, 1500);\n                    });\n              } else {\n                Swal.fire({\n                  title: 'Error',\n                  text: response.data.message,\n                  icon: 'warning'\n                }).then(() => {\n                  actions.setSubmitting(false);\n                });\n              }\n            })\n            .catch((res) => {\n              window.location.reload(false);\n            });\n        }}\n      >\n        {({ touched, errors, onChange, values, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Form.Field>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                value={values.email}\n                // onChange={(e) => setEmail(e.target.value)}\n                className={styles.borderBottom}\n                onBlur={handleBlur}\n                // validateOnChange={handleChange}\n                onChange={handleChange}\n                error={!!touched.email && !!errors.email}\n                placeholder=\"Email\"\n              />\n              {errors.email && touched.email && <span className={'error-text'}>{errors.email}</span>}\n            </Form.Field>\n            <Form.Field>\n              <Input\n                icon={<Icon name={showPassword ? 'eye slash outline' : 'eye'} link onClick={handleTogglePassword} />}\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={values.password}\n                // onChange={(e) => setPassword(e.target.value)}\n                onChange={handleChange}\n                // validateOnChange={handleChange}\n                onBlur={handleBlur}\n                error={!!touched.password && !!errors.password}\n                className={styles.borderBottom}\n                placeholder=\"Password\"\n              />\n              {errors.password && touched.password && <span className={'error-text'}>{errors.password}</span>}\n            </Form.Field>\n            <p className={styles.forgotLink}>\n              {/* <a>Fogot Password?</a> */}\n              <Link to=\"/forgot-password\">Fogot Password?</Link>\n            </p>\n            <Button\n              disabled={isSubmitting}\n              loading={isSubmitting}\n              // onClick={PostData}\n              className={styles.button_fluid}\n              primary\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Divider horizontal>Or</Divider>\n      <GoogleLogin\n        type=\"submit\"\n        className={styles.button_social}\n        clientId=\"920869882108-cf236hmg7903ol77gp3gj9vjnus5a787.apps.googleusercontent.com\"\n        onSuccess={responseGoogle}\n        onFailure={handleLogin}\n        cookiePolicy={'single_host_origin'}\n        buttonText={<h4>Login with Google</h4>}\n      />\n      {/* <Image src={process.env.PUBLIC_URL + '/images/google-icon.png'} avatar /> Login with Google */}\n      {/* </Button> */}\n      {/* <Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} avatar />\n        Login with Facebook */}\n      <FacebookLogin\n        cssClass={styles.myfacebookbuttonclass}\n        type=\"submit\"\n        appId=\"185749406856002\"\n        fields=\"name, email, picture\"\n        onClick={componentClicked}\n        callback={responseFacebook}\n        autLoad={true}\n        icon={<Image src={process.env.PUBLIC_URL + '/images/facebook-icon.png'} style={{ innerWidth: '100%' }} />}\n        textButton={<h4>Login with Facebook</h4>}\n      />\n\n      {/* </Button> */}\n\n      <p className={styles.textLink}>\n        New to FNT ? <Link to=\"/sign-up\">Sign Up</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}