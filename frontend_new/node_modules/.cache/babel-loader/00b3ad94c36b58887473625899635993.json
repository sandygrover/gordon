{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satin\\\\Downloads\\\\fnt\\\\frontend\\\\src\\\\components\\\\forms\\\\TipForm\\\\TipForm.js\",\n    _s = $RefreshSig$();\n\nimport { Header, Modal, Image, Input, TextArea, Form, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport styles from './TipForm.module.scss';\nimport CheckoutForm from \"./CheckoutForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_8WGyXi9xAGboHVEaAZiHkKzv\");\n\nfunction TipForm({\n  open = false,\n  setOpen\n}) {\n  _s();\n\n  let [responseData, setResponseData] = React.useState('');\n  let fetchData = React.useCallback(() => {\n    axios({\n      \"method\": \"GET\",\n      url: 'http://3.129.45.198/api/auth/get-card',\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setResponseData(response.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  React.useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: styles.modal,\n    closeIcon: true,\n    size: 'mini',\n    open: open,\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      content: \"Send Tip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.send_to,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sent to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.profile,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.about,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: localStorage.getItem('otherUserProfile') == null ? process.env.PUBLIC_URL + '/images/avatar/julia.png' : localStorage.getItem('otherUserProfile'),\n              size: \"mini\",\n              alt: localStorage.getItem('otherUserName'),\n              avatar: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.user_status,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: localStorage.getItem('otherUserName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"@\", localStorage.getItem('otherUserUserName')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: styles.input,\n              placeholder: \"Tip Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(TextArea, {\n              className: styles.textarea,\n              placeholder: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.char_length,\n              children: \"0/100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.button_group,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.btn_white,\n              onClick: () => setOpen(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), responseData[0] && responseData[0].card_number ? /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.button_fluid,\n              primary: true,\n              type: \"submit\",\n              children: \" Pay \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/cards\",\n              children: \"Add a payment card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TipForm, \"AOpBdYYQeqaNkH4Jv3iM5MHx96M=\");\n\n_c = TipForm;\nexport default TipForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipForm\");","map":{"version":3,"sources":["C:/Users/satin/Downloads/fnt/frontend/src/components/forms/TipForm/TipForm.js"],"names":["Header","Modal","Image","Input","TextArea","Form","Button","Link","axios","React","useState","Elements","loadStripe","styles","CheckoutForm","stripePromise","TipForm","open","setOpen","responseData","setResponseData","fetchData","useCallback","url","headers","localStorage","getItem","then","response","data","catch","error","console","log","useEffect","modal","send_to","profile","about","process","env","PUBLIC_URL","user_status","form","input","textarea","char_length","button_group","btn_white","card_number","button_fluid"],"mappings":"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","sourcesContent":["import { Header, Modal, Image, Input, TextArea, Form, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport React, {useState }from 'react';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport styles from './TipForm.module.scss';\nimport CheckoutForm from \"./CheckoutForm\";\n\nconst stripePromise = loadStripe(\"pk_test_8WGyXi9xAGboHVEaAZiHkKzv\");\n\nfunction TipForm({ open = false, setOpen }) {\n  let [responseData, setResponseData] = React.useState('');\n  let fetchData = React.useCallback(() => {\n    axios({\n      \"method\": \"GET\",\n      url: 'http://3.129.45.198/api/auth/get-card',\n      headers: {\n        \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n      },\n    })\n    .then((response) => {\n      setResponseData(response.data.data)\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }, [])\n  React.useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <Modal\n      className={styles.modal}\n      closeIcon\n      size={'mini'}\n      open={open}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header content=\"Send Tip\" />\n      <Modal.Content>\n        <div className={styles.send_to}>\n          <p>Sent to</p>\n          <div className={styles.profile}>\n            <div className={styles.about}>\n              <Image src={localStorage.getItem('otherUserProfile') == null ? process.env.PUBLIC_URL + '/images/avatar/julia.png' : localStorage.getItem('otherUserProfile')} size=\"mini\" alt={localStorage.getItem('otherUserName')} avatar />\n              <div className={styles.user_status}>\n                <strong>{localStorage.getItem('otherUserName')}</strong>\n                <span>@{localStorage.getItem('otherUserUserName')}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.form}>\n          <Form>\n            <Form.Field>\n              <Input className={styles.input} placeholder=\"Tip Amount\" />\n            </Form.Field>\n            <Form.Field>\n              <TextArea className={styles.textarea} placeholder=\"Message\" />\n              <p className={styles.char_length}>0/100</p>\n            </Form.Field>\n            <div className={styles.button_group}>\n              <span className={styles.btn_white} onClick={() => setOpen(false)}>\n                Cancel\n              </span>\n              {\n                (responseData[0] && responseData[0].card_number) ?\n                <Button\n                className={styles.button_fluid}\n                primary\n                type=\"submit\"\n                > Pay </Button> : <Link to=\"/cards\">Add a payment card</Link>\n              }\n            </div>\n          </Form>\n        </div>\n      </Modal.Content>\n      <Modal.Actions></Modal.Actions>\n      <div>\n        <Elements stripe={stripePromise}>\n          <CheckoutForm />\n        </Elements>\n      </div>\n    </Modal>\n  );\n}\n\nexport default TipForm;\n"]},"metadata":{},"sourceType":"module"}