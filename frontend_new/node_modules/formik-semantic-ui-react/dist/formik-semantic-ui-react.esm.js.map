{"version":3,"file":"formik-semantic-ui-react.esm.js","sources":["../src/Form.tsx","../src/Field.tsx","../src/ResetButton.tsx","../src/SubmitButton.tsx","../src/types.ts","../src/utils.ts","../src/Input.tsx","../src/TextArea.tsx","../src/Checkbox.tsx","../src/Radio.tsx","../src/Select.tsx","../src/FormikDebug.tsx"],"sourcesContent":["import React from 'react';\nimport { Form as SemanticForm, FormProps } from 'semantic-ui-react';\nimport { useFormikContext } from 'formik';\n\nexport const Form = (props: FormProps) => {\n  const { handleSubmit } = useFormikContext();\n  return <SemanticForm onSubmit={handleSubmit} {...props} />;\n};\n\nexport default Form;\n","import React from 'react';\nimport { FieldProps } from './types';\nimport { FastField, Field as FormikField } from 'formik';\n\nexport const Field: React.FC<FieldProps> = ({\n  fast,\n  children,\n  ...restProps\n}) => {\n  if (fast) {\n    return (\n      <FastField data-testid=\"fast-field\" {...restProps}>\n        {children}\n      </FastField>\n    );\n  } else {\n    return (\n      <FormikField data-testid=\"field\" {...restProps}>\n        {children}\n      </FormikField>\n    );\n  }\n};\n\nexport default Field;\n","import React from 'react';\nimport { ButtonProps, FormButton } from 'semantic-ui-react';\nimport { useFormikContext } from 'formik';\n\nexport const RESET_BUTTON_ID = 'formik-semantic-ui-react-reset-button';\n\nexport const ResetButton = ({ onClick, ...restProps }: ButtonProps) => {\n  const formContext = useFormikContext();\n  return (\n    <FormButton\n      id={RESET_BUTTON_ID}\n      type=\"button\"\n      onClick={(event, data) => {\n        formContext.resetForm();\n        onClick && onClick(event, data);\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default ResetButton;\n","import React from 'react';\nimport { ButtonProps, FormButton } from 'semantic-ui-react';\nimport { useFormikContext } from 'formik';\n\ninterface Props {\n  disableLoading?: boolean;\n}\n\nexport const SUBMIT_BUTTON_ID = 'formik-semantic-ui-react-submit-button';\n\nexport const SubmitButton = ({\n  disableLoading,\n  loading,\n  ...restProps\n}: ButtonProps & Props) => {\n  const context = useFormikContext();\n  return (\n    <FormButton\n      id={SUBMIT_BUTTON_ID}\n      type=\"submit\"\n      loading={\n        disableLoading\n          ? undefined\n          : loading === null || loading === undefined\n          ? context.isSubmitting\n          : loading\n      }\n      {...restProps}\n    />\n  );\n};\n\nexport default SubmitButton;\n","import { SemanticCOLORS } from 'semantic-ui-react';\n\nexport interface FieldProps {\n  name: string;\n  validate?: (value: any) => undefined | string | Promise<any>;\n  fast?: boolean;\n}\n\nexport interface FieldErrorProps {\n  errorPrompt?: boolean | ErrorPromptConfig;\n}\n\nexport type ErrorPointing = boolean | 'above' | 'below' | 'left' | 'right';\n\nexport interface ErrorPromptConfig {\n  // To config basic & color, you have to change prompt to false first\n  prompt?: boolean;\n  basic?: boolean;\n  color?: SemanticCOLORS;\n  pointing?: ErrorPointing;\n}\n\nexport const defaultErrorConfig: ErrorPromptConfig = {\n  prompt: true,\n  pointing: 'above',\n};\n","import { defaultErrorConfig, ErrorPromptConfig } from './types';\nimport { FieldMetaProps } from 'formik';\n\n// Helper to decide error config\nexport function getErrorConfig<T>(\n  meta: FieldMetaProps<T>,\n  errorPrompt: boolean | ErrorPromptConfig | undefined,\n) {\n  if (meta.error && meta.touched && errorPrompt) {\n    if (errorPrompt === true) {\n      return { content: meta.error, ...defaultErrorConfig };\n    } else {\n      return { content: meta.error, ...errorPrompt };\n    }\n  } else {\n    return null;\n  }\n}\n","import React, { forwardRef, Ref } from 'react';\nimport {\n  FieldMetaProps,\n  FieldProps as FormikFieldProps,\n  isObject,\n  isString,\n} from 'formik';\nimport {\n  FormField,\n  Input as SInput,\n  InputOnChangeData,\n  InputProps as _InputProps,\n  Label,\n  LabelProps,\n  SemanticShorthandItem,\n} from 'semantic-ui-react';\nimport { FieldErrorProps, FieldProps } from './types';\nimport Field from './Field';\nimport { RESET_BUTTON_ID } from './ResetButton';\nimport { SUBMIT_BUTTON_ID } from './SubmitButton';\nimport { getErrorConfig } from './utils';\n\nexport interface InputProps extends FieldProps, _InputProps, FieldErrorProps {\n  inputLabel?: SemanticShorthandItem<LabelProps>;\n}\n\nexport const Input = (\n  {\n    id,\n    name,\n    validate,\n    fast,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    errorPrompt,\n    label,\n    inputLabel,\n    ...restProps\n  }: InputProps,\n  ref: Ref<SInput>,\n) => {\n  const fieldLabelId = (id && label && `${id}-field-label`) || undefined;\n  const inputLabelId = (id && inputLabel && `${id}-input-label`) || undefined;\n\n  const fieldLabel = label && (\n    <label id={fieldLabelId} htmlFor={id}>\n      {label}\n    </label>\n  );\n\n  const errorLabel = (meta: FieldMetaProps<any>) => {\n    const errorConfig = getErrorConfig(meta, errorPrompt);\n\n    return (\n      <Label\n        id={id ? `${id}-error-message` : undefined}\n        {...errorConfig}\n        role=\"alert\"\n        aria-atomic\n      />\n    );\n  };\n\n  const errorLabelBefore = (meta: FieldMetaProps<SInput>) =>\n    (getErrorConfig(meta, errorPrompt)?.pointing === 'below' ||\n      getErrorConfig(meta, errorPrompt)?.pointing === 'right') &&\n    errorLabel(meta);\n\n  const errorLabelAfter = (meta: FieldMetaProps<SInput>) =>\n    (getErrorConfig(meta, errorPrompt)?.pointing === 'above' ||\n      getErrorConfig(meta, errorPrompt)?.pointing === 'left') &&\n    errorLabel(meta);\n\n  return (\n    <Field name={name} validate={validate} fast={fast}>\n      {({ field: { value, onChange, onBlur }, meta }: FormikFieldProps) => (\n        <FormField error={meta.touched && !!meta.error}>\n          {fieldLabel}\n          {errorLabelBefore(meta)}\n          <SInput\n            id={id}\n            ref={ref}\n            name={name}\n            value={value}\n            label={\n              (isString(inputLabel) && {\n                children: inputLabel,\n                htmlFor: id,\n                id: inputLabelId,\n              }) ||\n              (isObject(inputLabel) && {\n                ...(inputLabel as object),\n                htmlFor: id,\n                id: inputLabelId,\n              })\n            }\n            onChange={(\n              event: React.ChangeEvent<HTMLInputElement>,\n              data: InputOnChangeData,\n            ) => {\n              onChange(event);\n              _onChange && _onChange(event, data);\n            }}\n            onBlur={(event: FocusEvent) => {\n              if (event.relatedTarget instanceof Element) {\n                /*\n                  Skip validation onBlur when reset / submit button is clicked or\n                  It will block reset / submit button onClick event\n                */\n                if (\n                  event.relatedTarget.id === RESET_BUTTON_ID ||\n                  event.relatedTarget.id === SUBMIT_BUTTON_ID\n                ) {\n                  return;\n                }\n              }\n              onBlur(event);\n            }}\n            aria-describedby={id && !!meta.error ? `${id}-error-message` : null}\n            aria-invalid={!!meta.error ? true : undefined}\n            aria-labelledby={`${fieldLabelId ?? ''} ${inputLabelId ?? ''}`}\n            {...restProps}\n          />\n          {errorLabelAfter(meta)}\n        </FormField>\n      )}\n    </Field>\n  );\n};\n\nexport default forwardRef(Input);\n","import React, { forwardRef, Ref } from 'react';\nimport {\n  FormField,\n  TextArea as _TextArea,\n  TextAreaProps as _TextAreaProps,\n} from 'semantic-ui-react';\nimport { FieldErrorProps, FieldProps } from './types';\nimport { getErrorConfig } from './utils';\nimport Field from './Field';\nimport { FieldProps as FormikFieldProps } from 'formik';\nimport { RESET_BUTTON_ID } from './ResetButton';\nimport { SUBMIT_BUTTON_ID } from './SubmitButton';\n\nexport type TextAreaProps = FieldProps & _TextAreaProps & FieldErrorProps;\n\nexport const TextArea = (\n  {\n    name,\n    validate,\n    fast,\n    onChange: _onChange,\n    errorPrompt,\n    errorConfig,\n    ...restProps\n  }: TextAreaProps,\n  ref: Ref<_TextArea>,\n) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({ field: { value, onChange, onBlur }, meta }: FormikFieldProps) => (\n      <FormField\n        control={_TextArea}\n        ref={ref}\n        name={name}\n        value={value}\n        onChange={(\n          event: React.ChangeEvent<HTMLTextAreaElement>,\n          data: _TextAreaProps,\n        ) => {\n          onChange(event);\n          _onChange && _onChange(event, data);\n        }}\n        onBlur={(event: FocusEvent) => {\n          if (event.relatedTarget instanceof Element) {\n            /*\n              Skip validation onBlur when reset / submit button is clicked or\n              It will block reset / submit button onClick event\n            */\n            if (\n              event.relatedTarget.id === RESET_BUTTON_ID ||\n              event.relatedTarget.id === SUBMIT_BUTTON_ID\n            ) {\n              return;\n            }\n          }\n          onBlur(event);\n        }}\n        error={getErrorConfig(meta, errorPrompt)}\n        {...restProps}\n      />\n    )}\n  </Field>\n);\n\nexport default forwardRef(TextArea);\n","import React from 'react';\nimport {\n  Checkbox as _Checkbox,\n  CheckboxProps as _CheckboxProps,\n  FormField,\n} from 'semantic-ui-react';\nimport { FieldProps as FormikFieldProps } from 'formik';\nimport { FieldErrorProps, FieldProps } from './types';\nimport { getErrorConfig } from './utils';\nimport Field from './Field';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    _CheckboxProps,\n    FieldErrorProps {\n  name: string;\n}\n\nexport const Checkbox = ({\n  name,\n  validate,\n  fast,\n  onChange: _onChange,\n  errorPrompt,\n  ...restProps\n}: CheckboxProps) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({\n      field: { value, onBlur },\n      form: { setFieldValue, setFieldTouched },\n      meta,\n    }: FormikFieldProps) => (\n      <FormField\n        control={_Checkbox}\n        name={name}\n        checked={value}\n        onChange={(\n          event: React.FormEvent<HTMLInputElement>,\n          data: _CheckboxProps,\n        ) => {\n          setFieldValue(name, data.checked);\n          setFieldTouched(name, true, false);\n          _onChange && _onChange(event, data);\n        }}\n        onBlur={onBlur}\n        error={getErrorConfig(meta, errorPrompt)}\n        {...restProps}\n      />\n    )}\n  </Field>\n);\n\nexport default Checkbox;\n","import React from 'react';\nimport { FieldErrorProps, FieldProps } from './types';\nimport {\n  CheckboxProps,\n  FormField,\n  Radio as _Radio,\n  RadioProps as _RadioProps,\n} from 'semantic-ui-react';\nimport { FieldProps as FormikFieldProps } from 'formik';\nimport { getErrorConfig } from './utils';\nimport Field from './Field';\n\nexport type RadioProps = FieldProps & _RadioProps & FieldErrorProps;\n\nexport const Radio = ({\n  name,\n  validate,\n  fast,\n  value: _value,\n  onChange: _onChange,\n  errorPrompt,\n  ...restProps\n}: RadioProps) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({\n      field: { value, onBlur },\n      form: { setFieldValue, setFieldTouched },\n      meta,\n    }: FormikFieldProps) => (\n      <FormField\n        control={_Radio}\n        name={name}\n        checked={value === _value}\n        value={_value}\n        onChange={(\n          event: React.FormEvent<HTMLInputElement>,\n          data: CheckboxProps,\n        ) => {\n          setFieldValue(name, _value);\n          setFieldTouched(name, true, false);\n          _onChange && _onChange(event, data);\n        }}\n        onBlur={onBlur}\n        error={getErrorConfig(meta, errorPrompt)}\n        {...restProps}\n      />\n    )}\n  </Field>\n);\n\nexport default Radio;\n","import React from 'react';\nimport { FieldErrorProps, FieldProps } from './types';\nimport {\n  DropdownProps,\n  FormField,\n  Select as _Select,\n  SelectProps as _SelectProps,\n} from 'semantic-ui-react';\nimport { FieldProps as FormikFieldProps } from 'formik';\nimport { getErrorConfig } from './utils';\nimport Field from './Field';\n\nexport type SelectProps = FieldProps & _SelectProps & FieldErrorProps;\n\nexport const Select = ({\n  name,\n  value: _value,\n  options,\n  validate,\n  fast,\n  onChange: _onChange,\n  onBlur,\n  errorPrompt,\n  ...restProps\n}: SelectProps) => (\n  <Field name={name} validate={validate} fast={fast}>\n    {({\n      field: { value },\n      form: { setFieldValue, setFieldTouched },\n      meta,\n    }: FormikFieldProps) => (\n      <FormField\n        control={_Select}\n        name={name}\n        options={options}\n        value={value}\n        onChange={(\n          event: React.SyntheticEvent<HTMLElement, Event>,\n          data: DropdownProps,\n        ) => {\n          setFieldValue(name, data.value);\n          setFieldTouched(name, true, false);\n          _onChange && _onChange(event, data);\n        }}\n        onBlur={onBlur}\n        error={getErrorConfig(meta, errorPrompt)}\n        {...restProps}\n      />\n    )}\n  </Field>\n);\n\nexport default Select;\n","/* Source: https://github.com/jannikbuschke/formik-antd/blob/master/src/formik-debug/index.tsx*/\n\nimport React from 'react';\nimport { Field } from 'formik';\n\nexport const isDevelopmentMode = () =>\n  !process.env.NODE_ENV ||\n  process.env.NODE_ENV === 'development' ||\n  process.env.NODE_ENV === 'test';\n\nexport const FormikDebug = (\n  props: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >,\n) =>\n  isDevelopmentMode() ? (\n    <pre style={{ padding: 15, ...props }} data-testid=\"debug\">\n      <Field>{({ form }: any) => JSON.stringify(form, null, 2)}</Field>\n    </pre>\n  ) : null;\n"],"names":["Form","props","useFormikContext","handleSubmit","React","SemanticForm","onSubmit","Field","fast","children","restProps","FastField","FormikField","RESET_BUTTON_ID","ResetButton","onClick","formContext","FormButton","id","type","event","data","resetForm","SUBMIT_BUTTON_ID","SubmitButton","disableLoading","loading","context","undefined","isSubmitting","defaultErrorConfig","prompt","pointing","getErrorConfig","meta","errorPrompt","error","touched","content","Input","ref","name","validate","_onChange","onChange","_onBlur","label","inputLabel","fieldLabelId","inputLabelId","fieldLabel","htmlFor","errorLabel","errorConfig","Label","role","errorLabelBefore","errorLabelAfter","field","value","onBlur","FormField","SInput","isString","isObject","relatedTarget","Element","forwardRef","TextArea","control","_TextArea","Checkbox","form","setFieldValue","setFieldTouched","_Checkbox","checked","Radio","_value","_Radio","Select","options","_Select","isDevelopmentMode","process","env","NODE_ENV","FormikDebug","style","padding","JSON","stringify"],"mappings":"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"}